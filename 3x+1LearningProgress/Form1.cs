using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Windows.Forms.DataVisualization.Charting;

namespace _3x_1LearningProgress
{
    public partial class Form1 : Form
    {
        private List<int> numbers = new List<int>(); //takes in textbox input 
        private My3XPlus1 My3XPlus1 = new My3XPlus1();//has 3x + 1 formula
       


        public Form1()
        {
            InitializeComponent();
            //this.SuspendLayout();

            this.Load += new EventHandler(Form1_Load); // Subscribe to the Load event
            My3XPlus1 = new My3XPlus1(); // Initialize My3XPlus1

            

        }
        //instead of over populating initializeComponent..this method is called
        private void SetupControls()
        {



        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void label1_Click(object sender, EventArgs e)
        {

        }

        private void label2_Click(object sender, EventArgs e)
        {

        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {
            //need a method that takes tb input and sends its to formular method 
            //right now take the input from the tb 

        }

        /// <summary>
        /// Run btn click takes in textbox int and adds to List(tried with an array)
        /// uarrays as they can dynamically grow in size, making them ideal for scenarios 
        /// where the number of elements is not known in advance.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void RunBtn_click(object sender, EventArgs e)
        {


            if (int.TryParse(enterNumbTB.Text, out int enterNumb))
            {
                // Add the number from the text box to the list
                numbers.Add(enterNumb);
                //enterNumbTB.Clear();
                enterNumbTB.Focus();
            }
            else
            {
                MessageBox.Show("Please type in a number and click Run All");
                enterNumbTB.Clear();
            }
        }

        /// <summary>
        /// Clears the data show on textbox
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void clearAllBTN_Click(object sender, EventArgs e)
        {
            numbers.Clear();

            charResult.Series.Clear();
        }
        //-----------------------------------------------------------------------------------
        /// <summary>
        /// the method below takes user input from textbox. 
        /// Its primary function is to calculate the 3x+1 sequence
        /// for a list of numbers and then display these results on the chart control (charResult).
        /// Please provide feedback for the quality of the code.
        /// </summary>

        private void buttonProcess_Click(object sender, EventArgs e)
        {
            if (int.TryParse(enterNumbTB.Text, out int number))
            {
                // Initialize My3XPlus1 instance
                My3XPlus1 my3xPlus1 = new My3XPlus1();

                // Calculate results for the input number
                //numbers generated by the 3x+1 calculation
                List<int> results = my3xPlus1.Calculate(number);

                // Check if chartResult is initialized
                if (charResult != null)
                {
                    // Clear existing series from the chart before adding new ones
                    charResult.Series.Clear();

                    // Create a new series
                    Series series = new Series($"Number {number}")
                    {
                        ChartType = SeriesChartType.Line
                    };

                    // Add points to the series
                    for (int i = 0; i < results.Count; i++)
                    {
                        series.Points.AddXY(i, results[i]);
                    }

                    // Add the series to the chart
                    //a series according to GraphCity.com "Each series is made up of a set
                    //of data points consisting of an X value that can determine where on
                    //the X axis the data is plotted, and one or more Y values" (Graphcity.com, 2024)
                    charResult.Series.Add(series);
                }
                else
                {
                    MessageBox.Show("Chart control is not initialized."); //if no number is typed
                }
            }
            else
            {
                MessageBox.Show("Please enter a valid number."); //if the input is anything but an int
            }
        }
    }
}
    
        
    